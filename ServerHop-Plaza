local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local mathRandom = math.random

-- ฟังก์ชันวาร์ปไปเซิร์ฟเวอร์ที่มีคนเยอะที่สุด
local function teleportToMostPopulatedServer(placeId, retryLimit, userIdsToExclude)
    retryLimit = retryLimit or 5
    local attempts = 0
    local minPlayers = 15 -- จำนวนผู้เล่นขั้นต่ำ

    while attempts < retryLimit do
        attempts += 1
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. placeId .. '/servers/Public?sortOrder=Desc&limit=100&excludeFullServers=true')).data
        end)

        if success and result and #result > 0 then
            local validServers = {}
            for _, server in ipairs(result) do
                if server.playing >= minPlayers and server.playing < server.maxPlayers then
                    local hasExcludedPlayer = false
                    for _, playerId in ipairs(server.players) do
                        if table.find(userIdsToExclude, playerId) then
                            hasExcludedPlayer = true
                            break
                        end
                    end
                    if not hasExcludedPlayer then
                        table.insert(validServers, server)
                    end
                end
            end

            if #validServers > 0 then
                local randomIndex = mathRandom(math.min(10, #validServers), math.min(20, #validServers))
                local serverToTeleport = validServers[randomIndex]

                local teleportSuccess, teleportError = pcall(function()
                    TeleportService:TeleportToPlaceInstance(placeId, serverToTeleport.id, Player)
                end)

                if teleportSuccess then
                    print("วาร์ปไปเซิร์ฟเวอร์ใหม่:", serverToTeleport.id)
                    return true
                else
                    warn("วาร์ปล้มเหลว (ข้อผิดพลาด: " .. tostring(teleportError) .. ")")
                end
            else
                print("ไม่มีเซิร์ฟเวอร์ที่เหมาะสม!")
            end
        else
            warn("ไม่สามารถดึงข้อมูลเซิร์ฟเวอร์! ลองใหม่ครั้งที่ " .. attempts)
        end

        task.wait(2)
    end

    warn("ไม่สามารถวาร์ปหลังจากพยายาม " .. retryLimit .. " ครั้ง!")
    return false
end

-- รายการ UserId ที่ต้องการหลีกเลี่ยง
local userIdsToExclude = {
    7519675360,
    7224796491
}

-- วาร์ปครั้งแรกทันทีเมื่อรันสคริปต์
task.wait(1)
teleportToMostPopulatedServer(15502339080, 25, userIdsToExclude)

-- ตั้งลูปเช็คทุก 15 นาที (900 วินาที)
while true do
    task.wait(900)  -- รอ 15 นาที

    local currentPlayers = #Players:GetPlayers()  -- นับจำนวนผู้เล่นในเซิร์ฟเวอร์ปัจจุบัน
    print("เช็คเซิร์ฟเวอร์: มีผู้เล่น " .. currentPlayers .. " คน")

    if currentPlayers < 15 then
        print("ผู้เล่นต่ำกว่า 15 คน! กำลังเปลี่ยนเซิร์ฟเวอร์...")
        teleportToMostPopulatedServer(15502339080, 25, userIdsToExclude)
    end
end
